version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - solace_msg_net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    healthcheck:
      test: 'nc -z localhost 2181'
      interval: 30s
      timeout: 10s
      retries: 3
#      start_period: 10s

  kafka:
    container_name: kafka-ps
    image: confluentinc/cp-kafka:latest
    networks:
      - solace_msg_net
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-ps:9092,PLAINTEXT_HOST://kafka-ps:29092
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-ps:9092  for docker
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    healthcheck:
      test: 'nc -z localhost 9092'
      interval: 30s
      timeout: 10s
      retries: 3
#      start_period: 10s

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    command: [ "--memory.max-traces=1000" ]
    networks:
      - solace_msg_net
    restart: always
    ports:
      - "16685:16685"
      - "16686:16686"
      - "16687:16687"
      - "14268:14268"
      - "14250:14250"

  # Collector
  otel-collector:
    image: ${OTELCOL_IMG}
    restart: always
    command: [ "--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}" ]
    hostname: otelcollector
    networks:
      - solace_msg_net
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    #      - ./ot-all.json:/etc/otelcol/ot-all.json
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
  solace:
    container_name: solace-ps
    image: ${PUBSUB_IMAGE}
    networks:
      - solace_msg_net
    env_file:
      - ./solace_config_keys.env
    ports:
      - '8008:8008'
      - '5671:5671'
      - '5672:5672'
      - "${PUBSUB_PORT_NUMBER}:55555"
      - '8080:8080'
      - '5550:5550'
      - '1943:1943'
      - '55556:55556'
      - '55443:55443'
      - '55445:55445'
      - '2222:2222'
    shm_size: 2g
    ulimits:
      memlock: -1
      nofile:
        soft: 2448
        hard: 42192
    healthcheck:
      test: 'curl -f http://localhost:8080'
      interval: 30s
      timeout: 10s
      retries: 3
#      start_period: 10s

  app-cons:
    build: .
    environment:
      - OTEL_SERVICE_NAME=app-consumer
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    entrypoint:
      - sh
      - -c
      - |
        java -cp /app/kafka-solace-context-propagation-1.0-SNAPSHOT.jar ConsumerApp
    networks:
      - solace_msg_net
    depends_on:
      kafka:
        condition: service_healthy
      solace:
        condition: service_healthy

  app-prod:
    build: .
    environment:
      - OTEL_SERVICE_NAME=app-producer
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    entrypoint:
      - sh
      - -c
      - |
        java -cp /app/kafka-solace-context-propagation-1.0-SNAPSHOT.jar KafkaProducerApp
    networks:
      - solace_msg_net
    depends_on:
      kafka:
        condition: service_healthy
      solace:
        condition: service_healthy
#    healthcheck:
#      test: [ "CMD", "nc", "-z", "kafka", "29092" ]
#      interval: 30s
#      timeout: 10s
#      retries: 3

networks:
  solace_msg_net:
